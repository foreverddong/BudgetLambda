@page "/schemaeditor/{packageid}"
@using BudgetLambda.CoreLib.Database
@inject BudgetContext database

<MudGrid>
    <MudItem md="3">
        <MudList Clickable="false">
            <MudListSubheader>
                <MudGrid>
                    <MudItem md="2">
                        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="CreateSchema"></MudIconButton>
                    </MudItem>
                    <MudItem md="10">
                        <MudText Typo="Typo.h4">Data Schemas</MudText>
                    </MudItem>
                </MudGrid>

            </MudListSubheader>

            @foreach (var s in this.Package.Schamas)
            {
                <MudListItem>
                    <MudGrid>
                        <MudItem md="10">
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => {this.SelectedSchema = s;}">@s.ToString()</MudButton>
                        </MudItem>
                        <MudItem md="2">
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small"
                                       OnClick="async () => await DeleteSchema(s)" />
                        </MudItem>
                    </MudGrid>

                </MudListItem>
            }
        </MudList>
    </MudItem>
    <MudItem md="9">
        @if (this.SelectedSchema is not null)
        {
            <MudContainer>
                <MudGrid>
                    <MudItem md="6">
                        <MudField Label="Component ID" Variant="Variant.Filled">@this.SelectedSchema.SchemaID</MudField>
                    </MudItem>
                    <MudItem md="6">
                        <MudTextField @bind-Value="@this.SelectedSchema.SchemaName" Label="Schema Name" Variant="Variant.Outlined"></MudTextField>
                    </MudItem>
                    <MudItem md="12">
                        <MudPaper Elevation="3">
                            <MudGrid>
                                <MudItem md="2">
                                    <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium"
                                               OnClick="AddDefinition" />
                                </MudItem>
                                <MudItem md="10">
                                    <MudText Typo="Typo.body1">Property Definitions</MudText>
                                </MudItem>
                                @foreach (var df in this.SelectedSchema.Mapping)
                                {
                                    <MudItem md="2">
                                        <MudCheckBox @bind-Checked="df.IsList" Label="List" Color="Color.Primary"></MudCheckBox>
                                    </MudItem>
                                    <MudItem md="4">
                                        <MudSelect @bind-Value="df.Type" Label="Variable Type" Variant="Variant.Outlined">
                                            @foreach(DataType ei in Enum.GetValues(typeof(DataType)))
                                            {
                                                <MudSelectItem Value="@ei">@ei</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudItem>
                                    <MudItem md="5">
                                        <MudTextField @bind-Value="df.Identifier" Label="Variable Name" Variant="Variant.Outlined"></MudTextField>
                                    </MudItem>
                                    <MudItem md="1">
                                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small"
                                               OnClick="async () => await DeleteDefinition(df)" />
                                    </MudItem>
                                }
                            </MudGrid>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        }

    </MudItem>
</MudGrid>